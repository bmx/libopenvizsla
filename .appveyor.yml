image:
  - Visual Studio 2015
  - Ubuntu

configuration:
  - Debug
  - Release

environment:
  matrix:
    - GENERATOR: Ninja
      VCPKG_TARGET_TRIPLET: x86-mingw-dynamic
    - GENERATOR: Ninja
      VCPKG_TARGET_TRIPLET: x64-mingw-dynamic
    - GENERATOR: Unix Makefiles
    - GENERATOR: Visual Studio 14
      VCPKG_TARGET_TRIPLET: x86-windows
    - GENERATOR: Visual Studio 14 Win64
      VCPKG_TARGET_TRIPLET: x64-windows

matrix:
  exclude:
    - image: Ubuntu
      GENERATOR: Ninja
      VCPKG_TARGET_TRIPLET: x86-mingw-dynamic
    - image: Ubuntu
      GENERATOR: Ninja
      VCPKG_TARGET_TRIPLET: x64-mingw-dynamic
    - image: Ubuntu
      GENERATOR: Visual Studio 14
      VCPKG_TARGET_TRIPLET: x86-windows
    - image: Ubuntu
      GENERATOR: Visual Studio 14 Win64
      VCPKG_TARGET_TRIPLET: x64-windows
    - image: Visual Studio 2015
      GENERATOR: Unix Makefiles

for:
-
  matrix:
    only:
      - image: Ubuntu
  install:
    - sudo apt-get update
    - sudo apt-get install -y cmake check gperf libftdi1-dev libzip-dev
  before_build:
    - mkdir build
    - cd build
    - cmake -G"${GENERATOR}" -DCMAKE_BUILD_TYPE=${CONFIGURATION} -DBUILD_SHARED_LIBS:BOOL=on ..
  build_script:
    - cmake --build . --config ${CONFIGURATION} -- VERBOSE=1
  test_script:
    - ctest --output-on-failure

install:
  - ps: |
        if ($env:VCPKG_TARGET_TRIPLET.Contains('mingw')) {
          $env:Path += ';C:\MinGW\bin'
        }
  - cd c:\tools\vcpkg
  - git pull -q
  - .\bootstrap-vcpkg.bat
  - vcpkg --triplet %VCPKG_TARGET_TRIPLET% install check libftdi1 libusb libzip[core] getopt gperf
  - cd %APPVEYOR_BUILD_FOLDER%
before_build:
  - mkdir build
  - cd build
  - cmake -G"%GENERATOR%" -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=%VCPKG_TARGET_TRIPLET% -DCMAKE_BUILD_TYPE=%CONFIGURATION% ..
build_script:
  - cmake --build . --config %CONFIGURATION%
test_script:
  - ctest --output-on-failure
cache: c:\tools\vcpkg\installed
